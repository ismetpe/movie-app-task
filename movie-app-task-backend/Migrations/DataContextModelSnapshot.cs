// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using movie_app_task_backend.Data;

namespace movie_app_task_backend.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.9");

            modelBuilder.Entity("ActorMedia", b =>
                {
                    b.Property<int>("ActorsId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MediaId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ActorsId", "MediaId");

                    b.HasIndex("MediaId");

                    b.ToTable("ActorMedia");
                });

            modelBuilder.Entity("movie_app_task_backend.Models.Actor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Actors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Chris Hemsworth"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Natalie Portman"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Tom Hiddleston"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Brianna Howe"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Carver Wong"
                        },
                        new
                        {
                            Id = 6,
                            Name = "James Hines"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Leon Jarvis"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Vinson Moran"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Simpson Evans"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Henry Molina"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Mccullough Curry"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Angelia Ruiz"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Hinton Love"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Victoria Alston"
                        });
                });

            modelBuilder.Entity("movie_app_task_backend.Models.Media", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Release_year")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.Property<string>("img_url")
                        .HasColumnType("TEXT");

                    b.Property<bool>("isSeries")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Medias");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "The powerful but arrogant god Thor is cast out of Asgard to live amongst humans in Midgard (Earth), where he soon becomes one of their finest defenders.",
                            Release_year = "2000-05-14",
                            Title = "Thor",
                            img_url = "https://swank.azureedge.net/swank/prod-film/3560cd8a-9491-4ab9-876c-8a8d6b84a6dd/f8e7c904-669a-4c9f-ac29-d19b64b43e33/one-sheet.jpg?width=335&height=508&mode=crop",
                            isSeries = false
                        },
                        new
                        {
                            Id = 2,
                            Description = "After Princess Leia, the leader of the Rebel Alliance, is held hostage by Darth Vader, Luke and Han Solo must free her and destroy the powerful weapon created by the Galactic Empire.",
                            Release_year = "1977-05-17",
                            Title = "Star Wars: A New Hope",
                            img_url = "https://musicimage.xboxlive.com/catalog/video.movie.8D6KGWZXZDZ3/image?locale=en-us&mode=crop&purposes=BoxArt&q=90&h=225&w=150&",
                            isSeries = false
                        },
                        new
                        {
                            Id = 3,
                            Description = "Frodo and Sam arrive in Mordor with the help of Gollum. A number of new allies join their former companions to defend Isengard as Saruman launches an assault from his domain",
                            Release_year = "2002-12-18",
                            Title = "Lord Of The Rings: The Two Towers",
                            img_url = "https://musicimage.xboxlive.com/catalog/video.movie.8D6KGWZL60J7/image?locale=en-gb&purposes=BoxArt&mode=scale&q=90&w=162",
                            isSeries = false
                        },
                        new
                        {
                            Id = 4,
                            Description = "Bilbo Baggins, a hobbit, is persuaded into accompanying a wizard and a group of dwarves on a journey to reclaim the city of Erebor and all its riches from the dragon Smaug.",
                            Release_year = "2012-12-13",
                            Title = "The Hobbit: An Unexpected Journey",
                            img_url = "https://musicimage.xboxlive.com/catalog/video.movie.8D6KGWZL59HB/image?locale=en-au&mode=crop&purposes=BoxArt&q=90&h=225&w=150&format=jpg",
                            isSeries = false
                        },
                        new
                        {
                            Id = 5,
                            Description = "Ray Holt, an eccentric commanding officer, and his diverse and quirky team of odd detectives solve crimes in Brooklyn, New York City.",
                            Release_year = "2013-09-17",
                            Title = "Brooklyn Nine-Nine",
                            img_url = "https://musicimage.xboxlive.com/catalog/video.tvseason.8D6KGWXN91QP/image?locale=de-de&mode=crop&purposes=BoxArt&q=90&h=225&w=150&format=jpg",
                            isSeries = true
                        });
                });

            modelBuilder.Entity("movie_app_task_backend.Models.Rating", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("MediaId")
                        .HasColumnType("INTEGER");

                    b.Property<float>("Rating_value")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("MediaId");

                    b.ToTable("Ratings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MediaId = 1,
                            Rating_value = 4.6f
                        },
                        new
                        {
                            Id = 2,
                            MediaId = 2,
                            Rating_value = 4.5f
                        },
                        new
                        {
                            Id = 3,
                            MediaId = 3,
                            Rating_value = 4.5f
                        },
                        new
                        {
                            Id = 4,
                            MediaId = 4,
                            Rating_value = 4.5f
                        });
                });

            modelBuilder.Entity("ActorMedia", b =>
                {
                    b.HasOne("movie_app_task_backend.Models.Actor", null)
                        .WithMany()
                        .HasForeignKey("ActorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("movie_app_task_backend.Models.Media", null)
                        .WithMany()
                        .HasForeignKey("MediaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("movie_app_task_backend.Models.Rating", b =>
                {
                    b.HasOne("movie_app_task_backend.Models.Media", null)
                        .WithMany("Ratings")
                        .HasForeignKey("MediaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("movie_app_task_backend.Models.Media", b =>
                {
                    b.Navigation("Ratings");
                });
#pragma warning restore 612, 618
        }
    }
}
